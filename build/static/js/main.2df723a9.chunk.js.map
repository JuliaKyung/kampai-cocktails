{"version":3,"sources":["components/Clock.jsx","components/Navbar.jsx","components/RandomButton.jsx","components/DrinksDisplay.jsx","components/SearchByIngredient.jsx","components/DrinkModal.jsx","components/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["Anime","ReactAnime","stagger","className","initial","targets","rotate","duration","easing","loop","id","Navbar","RandomButton","props","type","onClick","a","fetch","method","headers","then","response","json","randomDrink","catch","err","console","log","setDrinkResults","drinks","DrinksDisplay","getFullCocktailInfo","idNum","drinkDetails","drinkResults","map","obj","index","key","src","strDrinkThumb","setDrinkId","idDrink","cocktailInfo","setFullDrinkInfo","setShowModal","strDrink","SearchByIngredient","placeholder","onChange","e","setIngredient","target","value","ingredient","preventDefault","drinksObj","DrinkModal","useState","youtubeLink","setYoutubeLink","onMouseEnter","drink","fullDrinkInfo","youTubeInfo","youtubeObj","items","url","strAlcoholic","strGlass","strCategory","measureIngredientPairs","i","Object","keys","href","checkIngredients","strInstructions","DrinkModalPortal","ReactDOM","createPortal","document","body","MainPage","showModal","drinkId","App","Boolean","window","location","hostname","match","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2df723a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Clock.css\";\r\nimport ReactAnime from \"react-animejs\";\r\nconst { Anime, stagger } = ReactAnime;\r\n\r\nexport default function () {\r\n  return (\r\n    <div className=\"clock\">\r\n      <div className=\"clock-face\">\r\n        <div className=\"hour-hand\"></div>\r\n        <div className=\"min-hand\"></div>\r\n        <Anime\r\n          initial={[\r\n            {\r\n              targets: \"#secHand\",\r\n              rotate: \"1turn\",\r\n              duration: 60000,\r\n              easing: \"linear\",\r\n              loop: true,\r\n            },\r\n          ]}\r\n        >\r\n          <div className=\"sec-hand\" id=\"secHand\"></div>\r\n        </Anime>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Clock from \"./Clock.jsx\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <h1 className=\"appName\">Kampai Cocktails</h1>\r\n      <Clock />\r\n      <h2 className=\"phrase\">It's 5 o'clock somewhere...</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function RandomButton(props) {\r\n  // random drink API\r\n  function getRandomDrink() {\r\n    return fetch(\"https://the-cocktail-db.p.rapidapi.com/random.php\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"8618e17941mshc832839b43572f9p1a882bjsn30e7e367eddd\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((randomDrink) => {\r\n        return randomDrink;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomContainer\">\r\n      <button\r\n        className=\"buttons\"\r\n        type=\"button\"\r\n        onClick={async () => {\r\n          // do something in here that calls the random drink API\r\n          // then displays 6 random drinks\r\n          let randomDrink = await getRandomDrink();\r\n          console.log(randomDrink);\r\n          props.setDrinkResults(randomDrink.drinks);\r\n        }}\r\n      >\r\n        Random Drink!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/DrinksDisplay.css\";\r\n\r\nexport default function DrinksDisplay(props) {\r\n  console.log(typeof props.drinkResults);\r\n  //const drinksArray = props.drinkResults.drinks;\r\n\r\n  // function fetchYoutubeLink(drink) {\r\n  //   return fetch(\r\n  //     `https://youtube-search1.p.rapidapi.com/how%2520to%2520make%2520${drink}%2520drink`,\r\n  //     {\r\n  //       method: \"GET\",\r\n  //       headers: {\r\n  //         \"x-rapidapi-host\": \"youtube-search1.p.rapidapi.com\",\r\n  //         \"x-rapidapi-key\":\r\n  //           \"8618e17941mshc832839b43572f9p1a882bjsn30e7e367eddd\",\r\n  //       },\r\n  //     }\r\n  //   )\r\n  //     .then((response) => {\r\n  //       return response.json();\r\n  //     })\r\n  //     .then((youTubeInfo) => {\r\n  //       return youTubeInfo;\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }\r\n\r\n  function getFullCocktailInfo(idNum) {\r\n    return fetch(\r\n      `https://the-cocktail-db.p.rapidapi.com/lookup.php?i=${idNum}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"8618e17941mshc832839b43572f9p1a882bjsn30e7e367eddd\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((drinkDetails) => {\r\n        return drinkDetails;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  if (typeof props.drinkResults === \"object\") {\r\n    return (\r\n      <div className={\"imgContainer\"}>\r\n        {props.drinkResults.map((obj, index) => (\r\n          <div key={index}>\r\n            <img\r\n              className={\"drinkImg\"}\r\n              src={obj.strDrinkThumb}\r\n              onClick={async () => {\r\n                // do something here to display the modal\r\n                // console.log(\"this is the drink obj FIND DRINK ID KEY NAME\", obj);\r\n                props.setDrinkId(obj.idDrink);\r\n                // console.log(\"obj.idDrink from drinksdisplay\", obj.idDrink);\r\n                let cocktailInfo = await getFullCocktailInfo(obj.idDrink);\r\n                // console.log(cocktailInfo.drinks[0], \"<---- cocktailInfo.drinks[0]\");\r\n                props.setFullDrinkInfo(cocktailInfo.drinks[0]);\r\n\r\n                // let youtubeObj = await fetchYoutubeLink(\r\n                //   props.fullDrinkInfo.strDrink\r\n                // );\r\n                // set state\r\n                // props.setYoutubeLink(youtubeObj.items[0].url);\r\n                props.setShowModal(true);\r\n              }}\r\n            ></img>\r\n            <p\r\n              onClick={async () => {\r\n                // do something here to display the modal\r\n                // console.log(\"this is the drink obj FIND DRINK ID KEY NAME\", obj);\r\n                props.setDrinkId(obj.idDrink);\r\n                // console.log(\"obj.idDrink from drinksdisplay\", obj.idDrink);\r\n                let cocktailInfo = await getFullCocktailInfo(obj.idDrink);\r\n                // console.log(cocktailInfo.drinks[0], \"<---- cocktailInfo.drinks[0]\");\r\n                props.setFullDrinkInfo(cocktailInfo.drinks[0]);\r\n\r\n                // let youtubeObj = await fetchYoutubeLink(\r\n                //   props.fullDrinkInfo.strDrink\r\n                // );\r\n                // set state\r\n                // props.setYoutubeLink(youtubeObj.items[0].url);\r\n                props.setShowModal(true);\r\n              }}\r\n            >\r\n              {obj.strDrink}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"noDrinks\">Search by ingredient....or get a random one!</div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport DrinksDisplay from \"./DrinksDisplay.jsx\";\r\n\r\nexport default function SearchByIngredient(props) {\r\n  //const [drinkResults, setDrinkResults] = useState(\"\");\r\n\r\n  // console.log(\"drinkResults outside onClick\", drinkResults);\r\n\r\n  // drinks by ingredient API\r\n  function searchByIngredient(ingredient) {\r\n    return fetch(\r\n      `https://the-cocktail-db.p.rapidapi.com/filter.php?i=${ingredient}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"8618e17941mshc832839b43572f9p1a882bjsn30e7e367eddd\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((drinks) => {\r\n        return drinks;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"searchByIngredient\">\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"type an ingredient\"\r\n          onChange={(e) => {\r\n            props.setIngredient(e.target.value);\r\n          }}\r\n          value={props.ingredient}\r\n        ></input>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"buttons\"\r\n          onClick={async (e) => {\r\n            e.preventDefault();\r\n            // send ingredient string to API function call\r\n            let drinksObj = await searchByIngredient(props.ingredient);\r\n            if (drinksObj) {\r\n              props.setDrinkResults(drinksObj.drinks);\r\n            }\r\n          }}\r\n        >\r\n          Search for A Drink\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles/modal.css\";\r\n\r\nfunction checkIngredients(fullDrinkInfo) {\r\n  let measureIngredientPairs = {};\r\n\r\n  for (let i = 1; i <= 15; i++) {\r\n    if (fullDrinkInfo[`strIngredient${i}`] !== null) {\r\n      measureIngredientPairs[fullDrinkInfo[`strMeasure${i}`]] =\r\n        fullDrinkInfo[`strIngredient${i}`];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ingredientListContainer\">\r\n      Ingredients\r\n      {Object.keys(measureIngredientPairs).map((key) => {\r\n        if (key === \"null\") {\r\n          return (\r\n            <>\r\n              <p className=\"individualIngredient\" value={key}>\r\n                {\"To taste\"} -{\" \"}\r\n                <a\r\n                  href={`https://search.rakuten.co.jp/search/mall/${measureIngredientPairs[key]}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  {measureIngredientPairs[key]}\r\n                </a>\r\n              </p>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <>\r\n              <p className=\"individualIngredient\" value={key}>\r\n                {key} -{\" \"}\r\n                <a\r\n                  href={`https://search.rakuten.co.jp/search/mall/${measureIngredientPairs[key]}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  {measureIngredientPairs[key]}\r\n                </a>\r\n              </p>\r\n            </>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction fetchYoutubeLink(drink) {\r\n  return fetch(\r\n    `https://youtube-search1.p.rapidapi.com/how%2520to%2520make%2520${drink}%2520drink`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"youtube-search1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"8618e17941mshc832839b43572f9p1a882bjsn30e7e367eddd\",\r\n      },\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((youTubeInfo) => {\r\n      return youTubeInfo;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nfunction DrinkModal(props) {\r\n  const [youtubeLink, setYoutubeLink] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div\r\n        className=\"modal-content\"\r\n        onMouseEnter={async () => {\r\n          let youtubeObj = await fetchYoutubeLink(props.fullDrinkInfo.strDrink);\r\n          // console.log(youtubeObj);\r\n          setYoutubeLink(youtubeObj.items[0].url);\r\n        }}\r\n      >\r\n        {/* <h3>IM A SEXY MODAL</h3> */}\r\n        <img\r\n          className=\"modalImage\"\r\n          src={props.fullDrinkInfo.strDrinkThumb}\r\n        ></img>\r\n        <div className=\"drinkName\">{props.fullDrinkInfo.strDrink}</div>\r\n        <hr></hr>\r\n        <p className=\"alcoholContent\">\r\n          Alcoholic or non-alcoholic? {props.fullDrinkInfo.strAlcoholic}\r\n        </p>\r\n        <p className=\"glassType\">\r\n          Type of glass? {props.fullDrinkInfo.strGlass}\r\n        </p>\r\n\r\n        <p className=\"drinkCategory\">\r\n          Category: {props.fullDrinkInfo.strCategory}{\" \"}\r\n        </p>\r\n\r\n        <hr></hr>\r\n        {checkIngredients(props.fullDrinkInfo)}\r\n        <hr></hr>\r\n        <p className=\"instructions\">\r\n          Instructions: {props.fullDrinkInfo.strInstructions}\r\n        </p>\r\n        <p>\r\n          Click{\" \"}\r\n          <a href={youtubeLink} target=\"_blank\">\r\n            here\r\n          </a>{\" \"}\r\n          to watch a tutorial video on making the drink!\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button\"\r\n          onClick={() => {\r\n            console.log(\"typeof setshowmodal\", typeof setShowModal);\r\n            props.setShowModal(false);\r\n          }}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DrinkModalPortal(props) {\r\n  return ReactDOM.createPortal(DrinkModal(props), document.body);\r\n}\r\n\r\nexport default DrinkModalPortal;\r\n","import React, { useState } from \"react\";\r\nimport RandomButton from \"./RandomButton.jsx\";\r\nimport SearchByIngredient from \"./SearchByIngredient.jsx\";\r\nimport DrinksDisplay from \"./DrinksDisplay.jsx\";\r\nimport DrinkModalPortal from \"./DrinkModal.jsx\";\r\nimport \"../styles/MainPage.css\";\r\n\r\n// import modal later\r\n\r\nexport default function MainPage() {\r\n  const [ingredient, setIngredient] = useState(\"\");\r\n  const [drinkResults, setDrinkResults] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [drinkId, setDrinkId] = useState(\"\");\r\n  const [fullDrinkInfo, setFullDrinkInfo] = useState(\"\");\r\n  const [youtubeLink, setYoutubeLink] = useState(\"\");\r\n\r\n  // we need to somehow detect when drinkResults changes\r\n  // whenever drinkResults changes and is NOT a string\r\n  // update DrinksDisplay\r\n\r\n  return (\r\n    <div className=\"MainPage\">\r\n      <div className=\"allButtons\">\r\n        <RandomButton\r\n          className=\"randomButton\"\r\n          drinkResults={drinkResults}\r\n          setDrinkResults={setDrinkResults}\r\n        />\r\n        <SearchByIngredient\r\n          className=\"searchByIngredient\"\r\n          setIngredient={setIngredient}\r\n          ingredient={ingredient}\r\n          drinkResults={drinkResults}\r\n          setDrinkResults={setDrinkResults}\r\n        />\r\n      </div>\r\n      <DrinksDisplay\r\n        drinkResults={drinkResults}\r\n        setDrinkResults={setDrinkResults}\r\n        setShowModal={setShowModal}\r\n        drinkId={drinkId}\r\n        setDrinkId={setDrinkId}\r\n        fullDrinkInfo={fullDrinkInfo}\r\n        setFullDrinkInfo={setFullDrinkInfo}\r\n        youtubeLink={youtubeLink}\r\n        setYoutubeLink={setYoutubeLink}\r\n      />\r\n      <div>\r\n        {showModal ? (\r\n          <DrinkModalPortal\r\n            showModal={showModal}\r\n            setShowModal={setShowModal}\r\n            drinkId={drinkId}\r\n            fullDrinkInfo={fullDrinkInfo}\r\n            setFullDrinkInfo={setFullDrinkInfo}\r\n            youtubeLink={youtubeLink}\r\n            setYoutubeLink={setYoutubeLink}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport Navbar from \"./components/Navbar.jsx\";\nimport MainPage from \"./components/MainPage.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar\" />\n      <MainPage className=\"mainPage\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}