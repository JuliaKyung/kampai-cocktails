{"version":3,"sources":["components/Clock.jsx","components/Navbar.jsx","components/DrinksDisplay.jsx","components/RandomButton.jsx","components/SearchByIngredient.jsx","components/DrinkModal.jsx","components/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["className","Navbar","DrinksDisplay","props","console","log","drinkResults","map","obj","index","key","src","strDrinkThumb","onClick","a","setDrinkId","idDrink","idNum","fetch","method","headers","then","response","json","drinkDetails","catch","err","cocktailInfo","setFullDrinkInfo","drinks","setShowModal","strDrink","RandomButton","type","randomDrink","setDrinkResults","SearchByIngredient","placeholder","onChange","e","setIngredient","target","value","ingredient","preventDefault","drinksObj","DrinkModal","fullDrinkInfo","strAlcoholic","strGlass","strCategory","measureIngredientPairs","i","Object","keys","href","checkIngredients","strInstructions","DrinkModalPortal","ReactDOM","createPortal","document","body","MainPage","useState","showModal","drinkId","App","Boolean","window","location","hostname","match","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e3e79358.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Clock.css\";\r\n\r\nexport default function () {\r\n  return (\r\n    <div className=\"clock\">\r\n      <div className=\"clock-face\">\r\n        <div className=\"hour-hand\"></div>\r\n        <div className=\"min-hand\"></div>\r\n        <div className=\"sec-hand\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Clock from \"./Clock.jsx\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <h1>Kampai Cocktails</h1>\r\n      <Clock />\r\n      <h2>It's 5 o'clock somewhere...</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/DrinksDisplay.css\";\r\n\r\nexport default function DrinksDisplay(props) {\r\n  console.log(typeof props.drinkResults);\r\n  //const drinksArray = props.drinkResults.drinks;\r\n\r\n  function getFullCocktailInfo(idNum) {\r\n    return fetch(\r\n      `https://the-cocktail-db.p.rapidapi.com/lookup.php?i=${idNum}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"8618e17941mshc832839b43572f9p1a882bjsn30e7e367eddd\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((drinkDetails) => {\r\n        return drinkDetails;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  if (typeof props.drinkResults === \"object\") {\r\n    return (\r\n      <div className={\"imgContainer\"}>\r\n        {props.drinkResults.map((obj, index) => (\r\n          <div key={index}>\r\n            <img\r\n              className={\"drinkImg\"}\r\n              src={obj.strDrinkThumb}\r\n              onClick={async () => {\r\n                // do something here to display the modal\r\n                // console.log(\"this is the drink obj FIND DRINK ID KEY NAME\", obj);\r\n                props.setDrinkId(obj.idDrink);\r\n                // console.log(\"obj.idDrink from drinksdisplay\", obj.idDrink);\r\n                let cocktailInfo = await getFullCocktailInfo(obj.idDrink);\r\n                // console.log(cocktailInfo.drinks[0], \"<---- cocktailInfo.drinks[0]\");\r\n                props.setFullDrinkInfo(cocktailInfo.drinks[0]);\r\n                props.setShowModal(true);\r\n              }}\r\n            ></img>\r\n            <p>{obj.strDrink}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Search by ingredient....or get a random one!</div>;\r\n}\r\n","import React from \"react\";\r\nimport DrinksDisplay from \"./DrinksDisplay.jsx\";\r\n\r\nexport default function RandomButton(props) {\r\n  // random drink API\r\n  function getRandomDrink() {\r\n    return fetch(\"https://the-cocktail-db.p.rapidapi.com/random.php\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"8618e17941mshc832839b43572f9p1a882bjsn30e7e367eddd\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((randomDrink) => {\r\n        return randomDrink;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomContainer\">\r\n      <button\r\n        type=\"button\"\r\n        onClick={async () => {\r\n          // do something in here that calls the random drink API\r\n          // then displays 6 random drinks\r\n          let randomDrink = await getRandomDrink();\r\n          console.log(randomDrink);\r\n          props.setDrinkResults(randomDrink.drinks);\r\n        }}\r\n      >\r\n        Random Drink!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport DrinksDisplay from \"./DrinksDisplay.jsx\";\r\n\r\nexport default function SearchByIngredient(props) {\r\n  //const [drinkResults, setDrinkResults] = useState(\"\");\r\n\r\n  // console.log(\"drinkResults outside onClick\", drinkResults);\r\n\r\n  // drinks by ingredient API\r\n  function searchByIngredient(ingredient) {\r\n    return fetch(\r\n      `https://the-cocktail-db.p.rapidapi.com/filter.php?i=${ingredient}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"8618e17941mshc832839b43572f9p1a882bjsn30e7e367eddd\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((drinks) => {\r\n        return drinks;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"searchByIngredient\">\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"type an ingredient\"\r\n          onChange={(e) => {\r\n            props.setIngredient(e.target.value);\r\n          }}\r\n          value={props.ingredient}\r\n        ></input>\r\n        <button\r\n          type=\"submit\"\r\n          onClick={async (e) => {\r\n            // send ingredient string to API function call\r\n            e.preventDefault();\r\n            let drinksObj = await searchByIngredient(props.ingredient);\r\n            props.setDrinkResults(drinksObj.drinks);\r\n            // console.log(\"this is drinkResults:\", drinksObj);\r\n            // console.log(drinkArray, \"<---- drinkArray\");\r\n          }}\r\n        >\r\n          Search for A Drink\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles/modal.css\";\r\n\r\n// function getRakutenProduct(ingredient) {\r\n//   return fetch(\r\n//     `https://rakuten_webservice-rakuten-marketplace-product-search-v1.p.rapidapi.com/services/api/Product/Search/${ingredient}`,\r\n//     {\r\n//       method: \"GET\",\r\n//       headers: {\r\n//         \"x-rapidapi-host\":\r\n//           \"rakuten_webservice-rakuten-marketplace-product-search-v1.p.rapidapi.com\",\r\n//         \"x-rapidapi-key\": \"8618e17941mshc832839b43572f9p1a882bjsn30e7e367eddd\",\r\n//       },\r\n//     }\r\n//   )\r\n//     .then((response) => {\r\n//       return response.json();\r\n//     })\r\n//     .then((product) => {\r\n//       console.log(product);\r\n//     })\r\n//     .catch((err) => {\r\n//       console.log(err);\r\n//     });\r\n// }\r\n\r\nfunction checkIngredients(fullDrinkInfo) {\r\n  let measureIngredientPairs = {};\r\n\r\n  for (let i = 1; i <= 15; i++) {\r\n    if (fullDrinkInfo[`strIngredient${i}`] !== null) {\r\n      measureIngredientPairs[fullDrinkInfo[`strMeasure${i}`]] =\r\n        fullDrinkInfo[`strIngredient${i}`];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ingredientListContainer\">\r\n      Ingredients\r\n      {Object.keys(measureIngredientPairs).map((key) => (\r\n        <p className=\"individualIngredient\" value={key}>\r\n          {key} -\r\n          <a\r\n            href={`https://search.rakuten.co.jp/search/mall/${measureIngredientPairs[key]}`}\r\n            target=\"_blank\"\r\n          >\r\n            {measureIngredientPairs[key]}\r\n          </a>\r\n          {/* {getRakutenProduct(measureIngredientPairs[key])} */}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DrinkModal(props) {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        {/* <h3>IM A SEXY MODAL</h3> */}\r\n        <img\r\n          className=\"modalImage\"\r\n          src={props.fullDrinkInfo.strDrinkThumb}\r\n        ></img>\r\n        <div className=\"drinkName\">{props.fullDrinkInfo.strDrink}</div>\r\n        <hr></hr>\r\n        <p className=\"alcoholContent\">\r\n          Is there alcohol? {props.fullDrinkInfo.strAlcoholic}\r\n        </p>\r\n        <p className=\"glassType\">\r\n          Type of glass? {props.fullDrinkInfo.strGlass}\r\n        </p>\r\n\r\n        <p className=\"drinkCategory\">\r\n          Category: {props.fullDrinkInfo.strCategory}{\" \"}\r\n        </p>\r\n\r\n        <hr></hr>\r\n        {checkIngredients(props.fullDrinkInfo)}\r\n        <hr></hr>\r\n        <p className=\"instructions\">\r\n          Instructions: {props.fullDrinkInfo.strInstructions}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            console.log(\"typeof setshowmodal\", typeof setShowModal);\r\n            props.setShowModal(false);\r\n          }}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DrinkModalPortal(props) {\r\n  return ReactDOM.createPortal(DrinkModal(props), document.body);\r\n}\r\n\r\nexport default DrinkModalPortal;\r\n","import React, { useState } from \"react\";\r\nimport RandomButton from \"./RandomButton.jsx\";\r\nimport SearchByIngredient from \"./SearchByIngredient.jsx\";\r\nimport DrinksDisplay from \"./DrinksDisplay.jsx\";\r\nimport DrinkModalPortal from \"./DrinkModal.jsx\";\r\nimport \"../styles/MainPage.css\";\r\n\r\n// import modal later\r\n\r\nexport default function MainPage() {\r\n  const [ingredient, setIngredient] = useState(\"\");\r\n  const [drinkResults, setDrinkResults] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [drinkId, setDrinkId] = useState(\"\");\r\n  const [fullDrinkInfo, setFullDrinkInfo] = useState(\"\");\r\n\r\n  // we need to somehow detect when drinkResults changes\r\n  // whenever drinkResults changes and is NOT a string\r\n  // update DrinksDisplay\r\n\r\n  return (\r\n    <div className=\"MainPage\">\r\n      <div className=\"allButtons\">\r\n        <RandomButton\r\n          className=\"randomButton\"\r\n          drinkResults={drinkResults}\r\n          setDrinkResults={setDrinkResults}\r\n        />\r\n        <SearchByIngredient\r\n          className=\"searchByIngredient\"\r\n          setIngredient={setIngredient}\r\n          ingredient={ingredient}\r\n          drinkResults={drinkResults}\r\n          setDrinkResults={setDrinkResults}\r\n        />\r\n      </div>\r\n      <DrinksDisplay\r\n        drinkResults={drinkResults}\r\n        setDrinkResults={setDrinkResults}\r\n        setShowModal={setShowModal}\r\n        drinkId={drinkId}\r\n        setDrinkId={setDrinkId}\r\n        fullDrinkInfo={fullDrinkInfo}\r\n        setFullDrinkInfo={setFullDrinkInfo}\r\n      />\r\n      <div\r\n      // onClick={() => {\r\n      //   setShowModal(true)\r\n      // }}\r\n      >\r\n        {showModal ? (\r\n          <DrinkModalPortal\r\n            showModal={showModal}\r\n            setShowModal={setShowModal}\r\n            drinkId={drinkId}\r\n            fullDrinkInfo={fullDrinkInfo}\r\n            setFullDrinkInfo={setFullDrinkInfo}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport Navbar from \"./components/Navbar.jsx\";\nimport MainPage from \"./components/MainPage.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar\" />\n      <MainPage className=\"mainPage\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}